name: "On Push"

on: [push]

jobs:

  test-python:
    name: Test Python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        directory: [
          "./lib/project01",
          "./lib/project02"
        ]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-in-project: true
          version: 1.1.4
      - name: Install dependencies
        run: poetry install
      - name: Run pytest
        run: |
          source .venv/bin/activate
          pytest --cov-branch --cov=$(basename $PWD) --cov-report= tests/
      - name: Generate report
        id: generate_report
        run: |
          files=$(git diff --name-only --merge-base origin/master -- '*.py' ':!tests/' | cat | grep -oP "^$(echo ./lib/project01 | cut -c3-)\/\K.*")
          source .venv/bin/activate
          report=$(coverage report --include=${files//$'\n'/','})
          report="${report//'%'/'%25'}"
          report="${report//$'\n'/'%0A'}"
          report="${report//$'\r'/'%0D'}"
          echo "::set-output name=coverage_result::$report"
      - name: Create commit comment
        # if: ${{ steps.has-envs.outputs.modifiedFiles > 0 }}
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Coverage Report```
            ${{ steps.generate_report.outputs.coverage_result }}```
  test-unit:
    name: Unit tests
    if: ${{ always() }}
    needs:
      - test-python
    runs-on: ubuntu-latest
    steps:
      - name: Python unit tests
        if: ${{ needs.test-python.result != 'success' }}
        run: exit 1
